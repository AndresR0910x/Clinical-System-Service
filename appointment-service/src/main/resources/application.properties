spring.application.name=appointment-service
server.port = 8082

#PostgreSQL 
spring.datasource.url=jdbc:postgresql://ep-old-sound-ad5bbicb-pooler.c-2.us-east-1.aws.neon.tech:5432/neondb?sslmode=require&channel_binding=require
spring.datasource.username=neondb_owner
spring.datasource.password=npg_Rsyqhc73jvVb
spring.jpa.hibernate.ddl-auto=update

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.hikari.maximum-pool-size=10

# RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#Exchange/routing para turnos
app.amqp.exchange=clinic.appointments
app.amqp.routing.created=appointment.created
app.amqp.routing.rescheduled=appointment.rescheduled
app.amqp.routing.cancelled=appointment.cancelled


# URLs de servicios remotos
services.patient.base-url=${PATIENT_URL:http://localhost:8081/api/v1/patients}
services.doctor.base-url=${DOCTOR_URL:http://localhost:8080/api/v1/doctors}

# Preferencias de agenda
app.appointments.slotMinutes=30